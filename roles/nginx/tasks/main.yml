---

- name: Pull NGINX docker image (version {{nginx_version}})
  docker_image:
    name: nginx:{{nginx_version}}
    source: pull

# Copy files to NGINX volumes

- name: Ensure NGINX directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - "/var/lib/{{ container_name }}/{{ app_name }}"
    - "/var/log/{{ container_name }}"
    - "/etc/{{ container_name }}/conf.d"
    - "/etc/{{ container_name }}/servers/{{ app_name }}/locations"

- name: Copy files to the server
  copy:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - src: test.html
      dest: "/var/lib/{{ container_name }}/{{ app_name }}/test.html"
    - src: robots.txt
      dest: "/var/lib/{{ container_name }}/{{ app_name }}/robots.txt"
    - src: default.conf
      dest: "/etc/{{ container_name }}/conf.d/default.conf"
  notify:
    - Restart NGINX

- name: Create SSL conf file for server
  template:
    src: ssl.conf.j2
    dest: "/etc/{{ container_name }}/servers/{{ app_name }}/ssl.conf"
  notify:
    - Restart NGINX

- name: Create conf file for server
  template:
    src: server.conf.j2
    dest: "/etc/{{ container_name }}/conf.d/{{ app_name }}.conf"

- name: Copy logrotate conf file for server
  template:
    src: logrotate.conf.j2
    dest: "/etc/logrotate.d/{{ container_name }}"
    
# Create/Start the container
  
- name: Run NGINX container
  docker_container:
    name: "{{ container_name }}"
    image: nginx:{{nginx_version}}
    state: started
    networks:
      - name: "{{ network_name }}"
    ports:
      - "80:80"
      - "443:443"
    volumes:      
      - "/etc/letsencrypt:/etc/letsencrypt:ro"
      - "/var/lib/{{ container_name }}:/usr/share/nginx/html:ro"
      - "/var/log/{{ container_name }}:/var/log/nginx:rw"
      - "/etc/{{ container_name }}/conf.d:/etc/nginx/conf.d:ro"
      - "/etc/{{ container_name }}/servers:/etc/nginx/servers:ro"
